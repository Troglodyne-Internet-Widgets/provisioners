#!/usr/bin/env perl

use strict;
use warnings;

my $DRY_RUN = $ARGV[0] ? 1 : 0;

# Build rules, apply rules.

# Enable every available service.
my $list = qx{ufw app list};
my @apps = split(/\n/, $list);
shift @apps;
@apps = map { s/^\s+//; $_ } @apps;

# Sane defaults
my @rules = (
    [qw{reset}],
    [qw{enable}],
    [qw{default deny outgoing}],
    [qw{default deny incoming}],
);

# Allow, but rate limit
foreach my $app (@apps) {
    push(@rules,
        ["allow", "out", $app],
    );
    # HTTP tends to request lots of stuff simultaneously
    if ($app =~ m/^Nginx|HTTP/i) {
        push(@rules,
            ["allow", "in", $app]
        );
    } else {
        push(@rules,
            ["limit", "in", $app],
        );
    }
}

@rules = map { unshift(@{$_}, '--dry-run'); $_ } @rules if $DRY_RUN;
@rules = map { unshift(@{$_}, 'ufw'); $_ } @rules;

foreach my $rule (@rules) {
    system(@$rule);
}
